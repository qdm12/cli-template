name: CI

on:
  push:
    paths:
      - .github/workflows/ci.yml
      - cmd/**
      - internal/**
      - pkg/**
      - .dockerignore
      - .golangci.yml
      - Dockerfile
      - go.mod
      - go.sum
  pull_request:
    paths:
      - .github/workflows/ci.yml
      - cmd/**
      - internal/**
      - pkg/**
      - .dockerignore
      - .golangci.yml
      - Dockerfile
      - go.mod
      - go.sum

jobs:
  verify:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
    env:
      DOCKER_BUILDKIT: "1"
    steps:
      - uses: actions/checkout@v2.3.4

      - name: Build base image
        run: docker build --target base -t base .

      - name: Linting
        run: docker build --target lint .

      - name: Mocks check
        run: docker build --target mocks .

      - name: Build test image
        run: docker build --target test -t test-container .

      - name: Run tests in test container
        run: |
          touch coverage.txt
          docker run --rm \
          -v "$(pwd)/coverage.txt:/tmp/gobuild/coverage.txt" \
          test-container

      - name: Build final image
        run: docker build -t final-image .

  publish:
    needs: [verify]
    permissions:
      actions: read
      contents: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0 # for gorelease last step

      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1

      - uses: docker/login-action@v1.9.0
        with:
          username: qmcgaw
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Set variables
        id: vars
        run: |
          BRANCH=${GITHUB_REF#refs/heads/}
          TAG=${GITHUB_REF#refs/tags/}
          echo ::set-output name=commit::$(git rev-parse --short HEAD)
          echo ::set-output name=created::$(date -u +%Y-%m-%dT%H:%M:%SZ)
          if [ "$TAG" != "$GITHUB_REF" ]; then
            echo ::set-output name=version::$TAG
            echo ::set-output name=platforms::linux/amd64,linux/386,linux/arm64,linux/arm/v6,linux/arm/v7,linux/s390x,linux/ppc64le,linux/riscv64
          elif [ "$BRANCH" = "main" ]; then
            echo ::set-output name=version::latest
            echo ::set-output name=platforms::linux/amd64,linux/386,linux/arm64,linux/arm/v6,linux/arm/v7,linux/s390x,linux/ppc64le,linux/riscv64
          else
            echo ::set-output name=version::$BRANCH
            echo ::set-output name=platforms::linux/amd64,linux/386,linux/arm64,linux/arm/v6,linux/arm/v7,linux/s390x,linux/ppc64le,linux/riscv64
          fi

      - name: Build and push image
        uses: docker/build-push-action@v2.4.0
        with:
          platforms: ${{ steps.vars.outputs.platforms }}
          build-args: |
            CREATED=${{ steps.vars.outputs.created }}
            COMMIT=${{ steps.vars.outputs.commit }}
            VERSION=${{ steps.vars.outputs.version }}
          tags: qmcgaw/reponame:${{ steps.vars.outputs.version }}
          push: true

      - if: github.event_name == 'release'
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - if: github.event_name == 'release'
        uses: goreleaser/goreleaser-action@v2.5.0
        with:
          version: latest
          args: release --config .gorelease.yml --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
